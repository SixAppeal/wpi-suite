/*******************************************************************************
 * Copyright (c) 2012 -- WPI Suite
 *
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    twack, Robert Smieja
 *******************************************************************************/

package edu.wpi.cs.wpisuitetng;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.Cookie;

import org.junit.Test;

import edu.wpi.cs.wpisuitetng.modules.core.models.Project;
import edu.wpi.cs.wpisuitetng.modules.core.models.User;

public class TestSession {
    User user1 = new User("Prometheus", "twack", null, 0);;
    User user2 = new User("Bob", "caveman", null, 1);

    String ssid1 = "abc";
    String ssid2 = "def";
    
    Session session1 = new Session(user1, ssid1);
    Session session2 = new Session(user2, ssid2);
    
    @Test
    public void testGetUsername()
    {
        assertTrue(session1.getUsername().equals("twack"));
    }
    
    /**
     * Test the LoginTime generation. Should initialize to the current time (new Date())
     */
    @Test
    public void testGetLoginTime()
    {
        assertNotNull(session1.getLoginTime());
        assertEquals(Date.class, session1.getLoginTime().getClass());
    }
    
    @Test
    public void testToString()
    {
        // DateFormat for the gson serializer: MMM d, yyyy h:mm:ss a
        SimpleDateFormat format = new SimpleDateFormat("MMM d, yyyy h:mm:ss a");
        Date loginTime = session1.getLoginTime();
        
        String json = "{\"user\":" + user1.toString() + ",\"loginTime\":\"" + format.format(loginTime) + "\",\"ssid\":\"" + ssid1 + "\"}";
        String sessionJson = session1.toString();
        assertEquals(json, sessionJson);
    }
    
    /**
     * Tests the cookie serialization of the Session object.
     *  The header is expected to be in the format: "WPISUITE-[username]"
     *  The body is expected to be the JSON representation generated by Session.toString()
     */
    @Test
    public void testToCookie()
    {
        Cookie cookie = this.session1.toCookie();
        String header = "WPISUITE-twack";
        String body = this.session1.getSessionId();
        
        assertTrue(cookie.getName().equals(header)); // test cookie Header correctness
        assertTrue(cookie.getValue().equals(body)); // test cookie Body correctness
    }
    
    @Test
    public void testGetProject()
    {
        Project project = new Project("defectTracker", "proj1");
        Session projectSes = new Session(user2, project, ssid1);
        
        assertTrue(project.equals(projectSes.getProject()));
    }
    
    @Test
    public void testGetUser()
    {
    	assertEquals(user1, session1.getUser());
    	assertEquals(user2, session2.getUser());
    }
}
